{
  "openapi" : "3.0.0",
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/Rexhaif/RSA-API/3.0.0"
  } ],
  "info" : {
    "description" : "API системы реляционно-ситуационного анализа текстов",
    "version" : "3.0.0",
    "title" : "API Машины RSA",
    "contact" : {
      "email" : "rexhaif.io@gmail.com"
    },
    "license" : {
      "name" : "MIT",
      "url" : "https://mit-license.org/"
    }
  },
  "tags" : [ {
    "name" : "analyze-docs",
    "description" : "Анализ по документам"
  }, {
    "name" : "analyze-corps",
    "description" : "Анализ по корпусам"
  }, {
    "name" : "read",
    "description" : "Чтение документов, корпусов, словарей и т.д"
  }, {
    "name" : "manage",
    "description" : "Методы для управления корпусами, документами, словарями и пользователями внутри организации"
  }, {
    "name" : "admin",
    "description" : "Методы для управления системой"
  } ],
  "paths" : {
    "/org/{org_id}/" : {
      "get" : {
        "summary" : "Получить список пользователей в организации",
        "operationId" : "get-users",
        "tags" : [ "manage" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "parameters" : [ {
          "in" : "path",
          "name" : "org_id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          },
          "required" : true
        } ],
        "responses" : {
          "200" : "Список пользователей",
          "content" : {
            "application/json" : null
          }
        }
      }
    },
    "/org/{org_id}/user" : {
      "post" : {
        "summary" : "Create new user",
        "operationId" : "create-user",
        "tags" : [ "manage" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "parameters" : [ {
          "in" : "path",
          "name" : "org_id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          },
          "required" : true,
          "description" : "id организации, в которую добавляется пользователь"
        } ],
        "requestBody" : {
          "description" : "Информация о пользователе",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "user_title" : {
                    "type" : "string",
                    "example" : "Ivan Ivanov"
                  },
                  "user_role" : {
                    "type" : "string",
                    "enum" : [ "admin", "editor", "user" ],
                    "example" : "admin"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "пользователь создан",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "user_id" : {
                      "description" : "id созданного пользователя",
                      "type" : "string",
                      "format" : "uuid"
                    },
                    "access_token" : {
                      "description" : "Короткосрочный токен доступа к операциям с api",
                      "type" : "string"
                    },
                    "refresh_token" : {
                      "description" : "Долгоживущий токен для обновления access_token",
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/org/{org_id}/{user_id}/token" : {
      "post" : {
        "summary" : "создать новый токен для текущего пользователя",
        "operationId" : "create-token",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "manage" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "org_id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          },
          "required" : true
        }, {
          "in" : "path",
          "name" : "user_id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          },
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "Токен создан",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "access_token" : {
                      "description" : "Короткосрочный токен доступа к операциям с api",
                      "type" : "string"
                    },
                    "refresh_token" : {
                      "description" : "Долгоживущий токен для обновления access_token",
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/refresh" : {
      "post" : {
        "summary" : "Oбновление access_token и refresh_token с помощью предыдущего refresh_token",
        "description" : "refresh_token необходимо подать в заголовке Authorization: Bearer <refresh_token>",
        "operationId" : "refresh-token",
        "tags" : [ "read" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "токен обновлен",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "access_token" : {
                      "description" : "Короткосрочный токен доступа к операциям с api",
                      "type" : "string"
                    },
                    "refresh_token" : {
                      "description" : "Долгоживущий токен для обновления access_token",
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/doc" : {
      "get" : {
        "summary" : "Поиск по всем документам",
        "operationId" : "search-docs",
        "tags" : [ "read" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "parameters" : [ {
          "in" : "query",
          "name" : "title",
          "schema" : {
            "type" : "string"
          },
          "description" : "фильтровать по фрагменту названия документа"
        }, {
          "in" : "query",
          "name" : "author",
          "schema" : {
            "type" : "string"
          },
          "description" : "фильтровать по автору документа"
        }, {
          "in" : "query",
          "name" : "created_before",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "description" : "фильтровать по времени создания документа(верхняя граница)"
        }, {
          "in" : "query",
          "name" : "created_after",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "description" : "фильтровать по времени создания документа(нижняя граница)"
        }, {
          "in" : "query",
          "name" : "tags",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "description" : "фильтровать по тегам документа"
        } ],
        "responses" : {
          "200" : {
            "description" : "Документы найдены",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Document"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Документы по данным условиям не найдены"
          }
        }
      }
    },
    "/doc/{doc_ids}/predicates" : {
      "get" : {
        "summary" : "Найти предикатно-аргументные пары по заданным условиям",
        "operationId" : "get_predicates",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "analyze-docs" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/doc_ids"
        }, {
          "in" : "query",
          "name" : "argument",
          "schema" : {
            "type" : "string"
          },
          "description" : "текст аргумента, который должны содержать пары"
        }, {
          "in" : "query",
          "name" : "predicate",
          "schema" : {
            "type" : "string"
          },
          "description" : "текст предиката, который должны содержать пары"
        }, {
          "in" : "query",
          "name" : "role",
          "schema" : {
            "type" : "string"
          },
          "description" : "название роли, которую должны реализовывать аргументы"
        } ],
        "responses" : {
          "200" : {
            "description" : "пары найдены",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ArgumentPredicateTuple"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/doc/{doc_ids}/lexics" : {
      "get" : {
        "summary" : "Выделить специфичную лексику по словарям из документов",
        "operationId" : "highlight_lexics",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "analyze-docs" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/doc_ids"
        }, {
          "in" : "query",
          "name" : "dicts",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "description" : "id словарей, которые необходимо использовать"
        } ],
        "responses" : {
          "201" : {
            "description" : "Слова из словарей найдены",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/WordTuple"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/doc/{doc_ids}/stats" : {
      "get" : {
        "summary" : "Рассчитать статистические показатели по документам",
        "operationId" : "compute_stats",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "analyze-docs" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/doc_ids"
        }, {
          "in" : "query",
          "name" : "statistics",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "description" : "Список показателей, которые необходимо рассчитать"
        } ],
        "responses" : {
          "200" : {
            "description" : "Показатели рассчитаны",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "stat_name" : {
                        "type" : "string"
                      },
                      "stat_values" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/EntityStatistic"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/doc/{doc_ids}/markers" : {
      "get" : {
        "summary" : "Рассчитать психолингвистические маркеры по документам",
        "operationId" : "compute_markers",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "analyze-docs" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/doc_ids"
        }, {
          "in" : "query",
          "name" : "markers",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "description" : "Список маркеров, которые необходимо рассчитать"
        } ],
        "responses" : {
          "200" : {
            "description" : "Маркеры рассчитаны",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DocumentStatistic"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/org" : {
      "get" : {
        "summary" : "Вывести список всех организаций",
        "operationId" : "list_orgs",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "admin" ],
        "responses" : {
          "200" : {
            "description" : "Список организаций",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Organization"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "Создать новую организацию",
        "operationId" : "create_org",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "admin" ],
        "requestBody" : {
          "description" : "Название организации и id родительской",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "title", "manager_id" ],
                "properties" : {
                  "title" : {
                    "type" : "string"
                  },
                  "manager_id" : {
                    "type" : "string",
                    "format" : "uuid"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Организация создана, возвращается объект орагнизации",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Organization"
                }
              }
            }
          }
        }
      }
    },
    "/org/{org_id}" : {
      "delete" : {
        "summary" : "Удалить организацию по id",
        "operationId" : "delete_org",
        "tags" : [ "admin" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "parameters" : [ {
          "in" : "path",
          "name" : "org_id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          },
          "required" : true,
          "description" : "id удаляемой организации"
        } ],
        "responses" : {
          "200" : {
            "description" : "Организация удалена"
          }
        }
      },
      "get" : {
        "summary" : "Вернуть всю информацию по организации",
        "operationId" : "get_org",
        "tags" : [ "read" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "parameters" : [ {
          "in" : "path",
          "name" : "org_id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          },
          "required" : true,
          "description" : "id организации"
        } ],
        "responses" : {
          "200" : {
            "description" : "Объект организации с данным id",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Organization"
                }
              }
            }
          }
        }
      }
    },
    "/corp" : {
      "get" : {
        "summary" : "Вернуть список корпусов",
        "operationId" : "list_corpuses",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "read" ],
        "responses" : {
          "200" : {
            "description" : "A array of corpuses",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Corpus"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "Создать новый корпус",
        "operationId" : "create_corp",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "manage" ],
        "requestBody" : {
          "description" : "Название корпуса и id родительского(если есть)",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "title" ],
                "properties" : {
                  "title" : {
                    "type" : "string"
                  },
                  "parent_id" : {
                    "type" : "string",
                    "format" : "uuid"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Корпус создан, возвращается объект созданного корпуса",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Corpus"
                }
              }
            }
          }
        }
      }
    },
    "/corp/{corp_id}" : {
      "get" : {
        "summary" : "Вернуть все данные по корпусу",
        "operationId" : "get_corp",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "read" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/corp_id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Корпус найден, возвращается объект",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Corpus"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "summary" : "Удалить корпус",
        "operationId" : "delete_corp",
        "tags" : [ "manage" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/corp_id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Корпус удален"
          }
        }
      }
    },
    "/corp/{corp_id}/doc" : {
      "post" : {
        "summary" : "Загрузка нового документа в корпус",
        "operationId" : "add_document",
        "tags" : [ "manage" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/corp_id"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Document"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Документ создан, возвращается id",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "document_id" : {
                      "type" : "string",
                      "format" : "uuid"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/corp/{corp_id}/doc/{doc_id}" : {
      "get" : {
        "summary" : "Получить документ",
        "operationId" : "get_doc",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "read" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/corp_id"
        }, {
          "$ref" : "#/components/parameters/doc_id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Документ найден",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Document"
                }
              }
            }
          }
        }
      }
    },
    "/corp/{corp_ids}/predicates" : {
      "get" : {
        "summary" : "Найти предикатно-аргументные пары по заданным условиям",
        "operationId" : "get_predicates",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "analyze-corps" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/corp_ids"
        }, {
          "in" : "query",
          "name" : "argument",
          "schema" : {
            "type" : "string"
          },
          "description" : "текст аргумента, который должны содержать пары"
        }, {
          "in" : "query",
          "name" : "predicate",
          "schema" : {
            "type" : "string"
          },
          "description" : "текст предиката, который должны содержать пары"
        }, {
          "in" : "query",
          "name" : "role",
          "schema" : {
            "type" : "string"
          },
          "description" : "название роли, которую должны реализовывать аргументы"
        } ],
        "responses" : {
          "200" : {
            "description" : "пары найдены",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ArgumentPredicateTuple"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/corp/{corp_ids}/stats" : {
      "get" : {
        "summary" : "Рассчитать статистические показатели по документам в указанных корпусах",
        "operationId" : "compute_stats",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "analyze-corps" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/corp_ids"
        }, {
          "in" : "query",
          "name" : "statistics",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "description" : "Список показателей, которые необходимо рассчитать"
        } ],
        "responses" : {
          "200" : {
            "description" : "Показатели рассчитаны",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "stat_name" : {
                        "type" : "string"
                      },
                      "stat_values" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/EntityStatistic"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/corp/{corp_ids}/markers" : {
      "get" : {
        "summary" : "Рассчитать психолингвистические маркеры по документам в указанных корпусах",
        "operationId" : "compute_markers",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "analyze-corps" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/corp_ids"
        }, {
          "in" : "query",
          "name" : "markers",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "description" : "Список маркеров, которые необходимо рассчитать"
        } ],
        "responses" : {
          "200" : {
            "description" : "Маркеры рассчитаны",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DocumentStatistic"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/corp/{corp_ids}/lexics" : {
      "get" : {
        "summary" : "Выделить специфичную лексику по словарям из документов в указанных корпусах",
        "operationId" : "highlight_lexics",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "analyze-corps" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/corp_ids"
        }, {
          "in" : "query",
          "name" : "dicts",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "description" : "id словарей, которые необходимо использовать в рассчете"
        } ],
        "responses" : {
          "201" : {
            "description" : "Слова из словарей найдены",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/WordTuple"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/dictionary/{dict_id}" : {
      "get" : {
        "summary" : "Вернуть словарь по id",
        "operationId" : "get_dictionary",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "read" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "dict_id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          },
          "description" : "id словаря"
        } ],
        "responses" : {
          "200" : {
            "description" : "Словарь найден",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Dictionary"
                }
              }
            }
          }
        }
      },
      "put" : {
        "summary" : "Добавить слова в словарь",
        "operationId" : "update_dictionary",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "manage" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "dict_id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          },
          "description" : "id словаря"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Слова добавлены"
          }
        }
      }
    },
    "/dictionary" : {
      "post" : {
        "summary" : "Создать новый словарь",
        "operationId" : "create_dictionary",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "manage" ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Dictionary"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Словарь создан",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "dict_id" : {
                      "type" : "string",
                      "format" : "uuid"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get" : {
        "summary" : "Вывести список всех словарей",
        "operationId" : "list_dictionaries",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "read" ],
        "responses" : {
          "200" : {
            "description" : "Список словарей",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Dictionary"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "securitySchemes" : {
      "bearerAuth" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    },
    "parameters" : {
      "corp_ids" : {
        "in" : "path",
        "name" : "corp_ids",
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "uuid"
          }
        },
        "required" : true
      },
      "corp_id" : {
        "in" : "path",
        "name" : "corp_id",
        "schema" : {
          "type" : "string",
          "format" : "uuid"
        },
        "required" : true,
        "description" : "id корпуса"
      },
      "doc_id" : {
        "in" : "path",
        "name" : "doc_id",
        "schema" : {
          "type" : "string",
          "format" : "uuid"
        },
        "required" : true,
        "description" : "id документа"
      },
      "doc_ids" : {
        "in" : "path",
        "name" : "doc_ids",
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "uuid"
          }
        },
        "required" : true,
        "description" : "id документов"
      }
    },
    "schemas" : {
      "Organization" : {
        "type" : "object",
        "required" : [ "id", "title", "created_at", "manager_id" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "title" : {
            "type" : "string",
            "example" : "Филологический факультет МГУ"
          },
          "manager_id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "parent_id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "members" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          }
        }
      },
      "User" : {
        "type" : "object",
        "required" : [ "user_id", "user_title" ],
        "properties" : {
          "user_id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "user_title" : {
            "type" : "string",
            "example" : "Иван Иванов"
          }
        }
      },
      "Corpus" : {
        "type" : "object",
        "required" : [ "id", "title", "org_id" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "title" : {
            "type" : "string",
            "example" : "студенты-социологи"
          },
          "owner_id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "parent_id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "documents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Document"
            }
          }
        }
      },
      "Document" : {
        "type" : "object",
        "required" : [ "id", "title", "author", "created_at", "tags" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "title" : {
            "type" : "string",
            "example" : "Эссе"
          },
          "author" : {
            "type" : "string",
            "example" : "Moscowithka"
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2016-08-29T09:12:33.001Z"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "text" : {
            "type" : "string",
            "example" : "Сейчас я закончила второй курс университета. Кстати я поступила в университет в Воронеже, а не в Липецке."
          },
          "metadata" : {
            "type" : "object"
          }
        }
      },
      "ArgumentPredicateTuple" : {
        "type" : "object",
        "required" : [ "document_id", "role", "predicate", "argument" ],
        "properties" : {
          "document_id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "role" : {
            "type" : "string",
            "example" : "локатив"
          },
          "predicate" : {
            "type" : "string",
            "example" : "создавать"
          },
          "context" : {
            "type" : "string",
            "example" : "других для кого-то в постоянно <b>меняющимся</b> мире ?"
          }
        }
      },
      "WordTuple" : {
        "type" : "object",
        "required" : [ "document_id", "word", "context" ],
        "properties" : {
          "document_id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "word" : {
            "type" : "string",
            "example" : "других"
          },
          "context" : {
            "type" : "string",
            "example" : "других для кого-то в постоянно <b>меняющимся</b> мире ?"
          }
        }
      },
      "EntityStatistic" : {
        "type" : "object",
        "required" : [ "entity", "statistic" ],
        "properties" : {
          "entity" : {
            "type" : "object",
            "properties" : {
              "entity_type" : {
                "type" : "string",
                "enum" : [ "global_counter", "local_entity" ]
              },
              "entity_name" : {
                "type" : "string",
                "example" : "количество слов"
              }
            }
          },
          "statistic" : {
            "type" : "number",
            "example" : 6798.0
          }
        }
      },
      "DocumentStatistic" : {
        "type" : "object",
        "required" : [ "document_id", "statistic" ],
        "properties" : {
          "document_id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "statistic" : {
            "type" : "number",
            "example" : 0.1281
          }
        }
      },
      "Dictionary" : {
        "type" : "object",
        "required" : [ "id", "name", "words", "owner_id" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "name" : {
            "type" : "string"
          },
          "owner_id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "words" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      }
    }
  }
}